/* ========================================================================
 * Copyright 2014 macrosoft
 *
 * Licensed under the MIT, The MIT License (MIT)
 * Copyright (c) 2014 macrosoft

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 * ========================================================================


Source generated by CrudMaker version 1.0.0.201408112050

*/

package co.edu.uniandes.csw.macrosoft.seccion.master.logic.ejb;

import co.edu.uniandes.csw.macrosoft.estudiante.logic.dto.EstudianteDTO;
import co.edu.uniandes.csw.macrosoft.estudiante.persistence.api.IEstudiantePersistence;
import co.edu.uniandes.csw.macrosoft.estudiante.logic.dto.EstudianteDTO;
import co.edu.uniandes.csw.macrosoft.estudiante.persistence.api.IEstudiantePersistence;
import co.edu.uniandes.csw.macrosoft.seccion.logic.dto.SeccionDTO;
import co.edu.uniandes.csw.macrosoft.seccion.master.logic.api._ISeccionMasterLogicService;
import co.edu.uniandes.csw.macrosoft.seccion.master.logic.dto.SeccionMasterDTO;
import co.edu.uniandes.csw.macrosoft.seccion.master.persistence.api.ISeccionMasterPersistence;
import co.edu.uniandes.csw.macrosoft.seccion.master.persistence.entity.SeccionenEspera_seccionEntity;
import co.edu.uniandes.csw.macrosoft.seccion.master.persistence.entity.Seccioninscritos_seccionEntity;
import co.edu.uniandes.csw.macrosoft.seccion.persistence.api.ISeccionPersistence;
import javax.inject.Inject;

public abstract class _SeccionMasterLogicService implements _ISeccionMasterLogicService {

    @Inject
    protected ISeccionPersistence seccionPersistance;
    @Inject
    protected ISeccionMasterPersistence seccionMasterPersistance;
    @Inject
    protected IEstudiantePersistence estudiantePersistance;

    public SeccionMasterDTO createMasterSeccion(SeccionMasterDTO seccion) {
        SeccionDTO persistedSeccionDTO = seccionPersistance.createSeccion(seccion.getSeccionEntity());
        if (seccion.getCreateenEspera_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getCreateenEspera_seccion()) {
                EstudianteDTO createdEstudianteDTO = estudiantePersistance.createEstudiante(estudianteDTO);
                SeccionenEspera_seccionEntity seccionEstudianteEntity = new SeccionenEspera_seccionEntity(persistedSeccionDTO.getId(), createdEstudianteDTO.getId());
                seccionMasterPersistance.createSeccionenEspera_seccionEntity(seccionEstudianteEntity);
            }
        }
        if (seccion.getCreateinscritos_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getCreateinscritos_seccion()) {
                EstudianteDTO createdEstudianteDTO = estudiantePersistance.createEstudiante(estudianteDTO);
                Seccioninscritos_seccionEntity seccionEstudianteEntity = new Seccioninscritos_seccionEntity(persistedSeccionDTO.getId(), createdEstudianteDTO.getId());
                seccionMasterPersistance.createSeccioninscritos_seccionEntity(seccionEstudianteEntity);
            }
        }
        // update estudiante
        if (seccion.getUpdateenEspera_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getUpdateenEspera_seccion()) {
                estudiantePersistance.updateEstudiante(estudianteDTO);
                SeccionenEspera_seccionEntity seccionEstudianteEntity = new SeccionenEspera_seccionEntity(persistedSeccionDTO.getId(), estudianteDTO.getId());
                seccionMasterPersistance.createSeccionenEspera_seccionEntity(seccionEstudianteEntity);
            }
        }
        // update estudiante
        if (seccion.getUpdateinscritos_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getUpdateinscritos_seccion()) {
                estudiantePersistance.updateEstudiante(estudianteDTO);
                Seccioninscritos_seccionEntity seccionEstudianteEntity = new Seccioninscritos_seccionEntity(persistedSeccionDTO.getId(), estudianteDTO.getId());
                seccionMasterPersistance.createSeccioninscritos_seccionEntity(seccionEstudianteEntity);
            }
        }
        return seccion;
    }

    public SeccionMasterDTO getMasterSeccion(Long id) {
        return seccionMasterPersistance.getSeccion(id);
    }

    public void deleteMasterSeccion(Long id) {
        seccionPersistance.deleteSeccion(id);
    }

    public void updateMasterSeccion(SeccionMasterDTO seccion) {
        seccionPersistance.updateSeccion(seccion.getSeccionEntity());

        //---- FOR RELATIONSHIP
        // delete estudiante
        if (seccion.getDeleteenEspera_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getDeleteenEspera_seccion()) {
                seccionMasterPersistance.deleteSeccionenEspera_seccionEntity(seccion.getSeccionEntity().getId(), estudianteDTO.getId());
            }
        }
        // persist new estudiante
        if (seccion.getCreateenEspera_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getCreateenEspera_seccion()) {
                SeccionenEspera_seccionEntity seccionEstudianteEntity = new SeccionenEspera_seccionEntity(seccion.getSeccionEntity().getId(), estudianteDTO.getId());
                seccionMasterPersistance.createSeccionenEspera_seccionEntity(seccionEstudianteEntity);
            }
        }
        // update estudiante
        if (seccion.getUpdateenEspera_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getUpdateenEspera_seccion()) {
                seccionMasterPersistance.deleteSeccionenEspera_seccionEntity(seccion.getSeccionEntity().getId(), estudianteDTO.getId());
                estudiantePersistance.updateEstudiante(estudianteDTO);
                SeccionenEspera_seccionEntity seccionEstudianteEntity = new SeccionenEspera_seccionEntity(seccion.getId(), estudianteDTO.getId());
                seccionMasterPersistance.createSeccionenEspera_seccionEntity(seccionEstudianteEntity);
                
            }
        }
        // delete estudiante
        if (seccion.getDeleteinscritos_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getDeleteinscritos_seccion()) {
                seccionMasterPersistance.deleteSeccioninscritos_seccionEntity(seccion.getSeccionEntity().getId(), estudianteDTO.getId());
            }
        }
        // persist new estudiante
        if (seccion.getCreateinscritos_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getCreateinscritos_seccion()) {
                Seccioninscritos_seccionEntity seccionEstudianteEntity = new Seccioninscritos_seccionEntity(seccion.getSeccionEntity().getId(), estudianteDTO.getId());
                seccionMasterPersistance.createSeccioninscritos_seccionEntity(seccionEstudianteEntity);
            }
        }
        // update estudiante
        if (seccion.getUpdateinscritos_seccion() != null) {
            for (EstudianteDTO estudianteDTO : seccion.getUpdateinscritos_seccion()) {
                seccionMasterPersistance.deleteSeccioninscritos_seccionEntity(seccion.getSeccionEntity().getId(), estudianteDTO.getId());
                estudiantePersistance.updateEstudiante(estudianteDTO);
                Seccioninscritos_seccionEntity seccionEstudianteEntity = new Seccioninscritos_seccionEntity(seccion.getId(), estudianteDTO.getId());
                seccionMasterPersistance.createSeccioninscritos_seccionEntity(seccionEstudianteEntity);
                
            }
        }
    }
}
